// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is TransmitterModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module TransmitterModule_TopLevel (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input  Clock,
	input  Reset,
	input  TransmitterModuleTrigger,
	input  TransmitterModuleAck,
	input  [8: 1] TransmitterModuleData,
	output TransmitterModuleBit,
	output TransmitterModuleIsReady,
	output TransmitterModuleIsTransmitting,
	output TransmitterModuleIsTransmissionStarted
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  TransmitterModule_TopLevel_Clock;
wire  TransmitterModule_TopLevel_Reset;
wire  TransmitterModule_TopLevel_TransmitterModuleTrigger;
wire  TransmitterModule_TopLevel_TransmitterModuleAck;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModuleData;
wire  TransmitterModule_TopLevel_TransmitterModuleBit;
wire  TransmitterModule_TopLevel_TransmitterModuleIsReady;
wire  TransmitterModule_TopLevel_TransmitterModuleIsTransmitting;
wire  TransmitterModule_TopLevel_TransmitterModuleIsTransmissionStarted;
wire  TransmitterModule_TopLevel_TransmitterModule_Clock;
wire  TransmitterModule_TopLevel_TransmitterModule_Reset;
wire  TransmitterModule_TopLevel_TransmitterModule_Trigger;
wire  TransmitterModule_TopLevel_TransmitterModule_Ack;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_Data;
reg  TransmitterModule_TopLevel_TransmitterModule_Bit = 1'b0;
reg  TransmitterModule_TopLevel_TransmitterModule_IsReady = 1'b0;
reg  TransmitterModule_TopLevel_TransmitterModule_IsTransmitting = 1'b0;
reg  TransmitterModule_TopLevel_TransmitterModule_IsTransmissionStarted = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule_Zero = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule_One = 1'b1;
wire  TransmitterModule_TopLevel_TransmitterModule_true = 1'b1;
wire  TransmitterModule_TopLevel_TransmitterModule_false = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule__L9F46T65_Expr = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule__L10F52T79_Expr = 1'b1;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F59T78_Expr = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F99T126_Expr = 1'b1;
wire  TransmitterModule_TopLevel_TransmitterModule_Inputs_Trigger;
wire  TransmitterModule_TopLevel_TransmitterModule_Inputs_Ack;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_Inputs_Data;
wire  TransmitterModule_TopLevel_TransmitterModule__L8F28T41_Index;
wire  [32:1] TransmitterModule_TopLevel_TransmitterModule_State_FSM;
wire  [32:1] TransmitterModule_TopLevel_TransmitterModule_State_FSMDefault = 32'b00000000000000000000000000000000;
reg  TransmitterModule_TopLevel_TransmitterModule_State_FSMWriteEnable = 1'b0;
wire  [32:1] TransmitterModule_TopLevel_TransmitterModule_NextState_FSM;
wire  [32:1] TransmitterModule_TopLevel_TransmitterModule_NextState_FSMDefault = 32'b00000000000000000000000000000000;
reg  TransmitterModule_TopLevel_TransmitterModule_NextState_FSMWriteEnable = 1'b0;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_Data;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_DataDefault = 8'b00000000;
reg  TransmitterModule_TopLevel_TransmitterModule_State_DataWriteEnable = 1'b0;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_Data;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_DataDefault = 8'b00000000;
reg  TransmitterModule_TopLevel_TransmitterModule_NextState_DataWriteEnable = 1'b0;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_Counter;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_CounterDefault = 8'b00000000;
reg  TransmitterModule_TopLevel_TransmitterModule_State_CounterWriteEnable = 1'b0;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_Counter;
wire  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_CounterDefault = 8'b00000000;
reg  TransmitterModule_TopLevel_TransmitterModule_NextState_CounterWriteEnable = 1'b0;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_1;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_2;
wire  TransmitterModule_TopLevel_TransmitterModule__L9F32T65_Expr;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprLhs;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprRhs;
wire  TransmitterModule_TopLevel_TransmitterModule__L10F39T79_Expr;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprLhs;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprRhs;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F46T78_Expr;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprLhs;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprRhs;
wire  TransmitterModule_TopLevel_TransmitterModule__L11F82T126_Expr;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprLhs;
wire signed  [33:1] TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprRhs;
wire  BoardSignals_Clock;
wire  BoardSignals_Reset;
wire  BoardSignals_Running;
wire  BoardSignals_Starting;
wire  BoardSignals_Started;
reg  InternalReset = 1'b0;
reg  [32:1] TransmitterModule_TopLevel_TransmitterModule_State_FSMQ = 32'b00000000000000000000000000000000;
reg  [32:1] TransmitterModule_TopLevel_TransmitterModule_State_FSMD = 32'b00000000000000000000000000000000;
reg  [32:1] TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ = 32'b00000000000000000000000000000000;
reg  [32:1] TransmitterModule_TopLevel_TransmitterModule_NextState_FSMD = 32'b00000000000000000000000000000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_DataQ = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_DataD = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_DataD = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_CounterQ = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_State_CounterD = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ = 8'b00000000;
reg  [8:1] TransmitterModule_TopLevel_TransmitterModule_NextState_CounterD = 8'b00000000;
work_Quokka_BoardSignalsProc TransmitterModule_TopLevel_TransmitterModule_BoardSignalsConnection(BoardSignals_Clock,BoardSignals_Reset,BoardSignals_Running,BoardSignals_Starting,BoardSignals_Started,TransmitterModule_TopLevel_TransmitterModule_Clock,TransmitterModule_TopLevel_TransmitterModule_Reset,InternalReset);
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_State_FSMDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_State_FSMWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_State_FSMD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_State_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_State_FSMQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_FSMDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_NextState_FSMWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_FSMD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_DataQ <= TransmitterModule_TopLevel_TransmitterModule_State_DataDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_State_DataWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_DataQ <= TransmitterModule_TopLevel_TransmitterModule_State_DataD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_State_DataQ <= TransmitterModule_TopLevel_TransmitterModule_State_DataQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_DataDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_NextState_DataWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_DataD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_State_CounterDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_State_CounterWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_State_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_State_CounterD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_State_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_State_CounterQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_CounterDefault;
end
else if ( TransmitterModule_TopLevel_TransmitterModule_NextState_CounterWriteEnable == 1 ) begin
TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_CounterD;
end
else begin
TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ <= TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ;
end
end
assign TransmitterModule_TopLevel_TransmitterModule__L9F32T65_Expr = TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprLhs == TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprRhs ? 1'b1 : 1'b0;
assign TransmitterModule_TopLevel_TransmitterModule__L10F39T79_Expr = TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprLhs == TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprRhs ? 1'b1 : 1'b0;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T78_Expr = TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprLhs == TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprRhs ? 1'b1 : 1'b0;
assign TransmitterModule_TopLevel_TransmitterModule__L11F82T126_Expr = TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprLhs == TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprRhs ? 1'b1 : 1'b0;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr = TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_1 & TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_2;
	assign TransmitterModule_TopLevel_TransmitterModuleTrigger = TransmitterModuleTrigger;
	assign TransmitterModule_TopLevel_TransmitterModuleAck = TransmitterModuleAck;
	assign TransmitterModule_TopLevel_TransmitterModuleData = TransmitterModuleData;
// Top-level entity connections
assign TransmitterModule_TopLevel_Clock = Clock;
work_Quokka_Metastability TransmitterModule_TopLevel_Reset_mtsb (BoardSignals_Clock, BoardSignals_Reset, ~Reset, TransmitterModule_TopLevel_Reset); // Inverted
assign TransmitterModuleBit = TransmitterModule_TopLevel_TransmitterModuleBit;
assign TransmitterModuleIsReady = TransmitterModule_TopLevel_TransmitterModuleIsReady;
assign TransmitterModuleIsTransmitting = TransmitterModule_TopLevel_TransmitterModuleIsTransmitting;
assign TransmitterModuleIsTransmissionStarted = TransmitterModule_TopLevel_TransmitterModuleIsTransmissionStarted;
assign TransmitterModule_TopLevel_TransmitterModule_State_FSM = TransmitterModule_TopLevel_TransmitterModule_State_FSMQ;
assign TransmitterModule_TopLevel_TransmitterModule_NextState_FSM = TransmitterModule_TopLevel_TransmitterModule_NextState_FSMQ;
assign TransmitterModule_TopLevel_TransmitterModule_State_Data = TransmitterModule_TopLevel_TransmitterModule_State_DataQ;
assign TransmitterModule_TopLevel_TransmitterModule_NextState_Data = TransmitterModule_TopLevel_TransmitterModule_NextState_DataQ;
assign TransmitterModule_TopLevel_TransmitterModule_State_Counter = TransmitterModule_TopLevel_TransmitterModule_State_CounterQ;
assign TransmitterModule_TopLevel_TransmitterModule_NextState_Counter = TransmitterModule_TopLevel_TransmitterModule_NextState_CounterQ;
assign TransmitterModule_TopLevel_TransmitterModule_Clock = TransmitterModule_TopLevel_Clock;
assign TransmitterModule_TopLevel_TransmitterModule_Reset = TransmitterModule_TopLevel_Reset;
assign TransmitterModule_TopLevel_TransmitterModule_Trigger = TransmitterModule_TopLevel_TransmitterModuleTrigger;
assign TransmitterModule_TopLevel_TransmitterModule_Ack = TransmitterModule_TopLevel_TransmitterModuleAck;
assign TransmitterModule_TopLevel_TransmitterModule_Data = TransmitterModule_TopLevel_TransmitterModuleData;
assign TransmitterModule_TopLevel_TransmitterModuleBit = TransmitterModule_TopLevel_TransmitterModule_Bit;
assign TransmitterModule_TopLevel_TransmitterModuleIsReady = TransmitterModule_TopLevel_TransmitterModule_IsReady;
assign TransmitterModule_TopLevel_TransmitterModuleIsTransmitting = TransmitterModule_TopLevel_TransmitterModule_IsTransmitting;
assign TransmitterModule_TopLevel_TransmitterModuleIsTransmissionStarted = TransmitterModule_TopLevel_TransmitterModule_IsTransmissionStarted;
assign TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprLhs = { {1{1'b0}}, TransmitterModule_TopLevel_TransmitterModule_State_FSM }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L9F32T65_ExprRhs = { {32{1'b0}}, TransmitterModule_TopLevel_TransmitterModule__L9F46T65_Expr }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprLhs = { {1{1'b0}}, TransmitterModule_TopLevel_TransmitterModule_State_FSM }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L10F39T79_ExprRhs = { {32{1'b0}}, TransmitterModule_TopLevel_TransmitterModule__L10F52T79_Expr }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprLhs = { {1{1'b0}}, TransmitterModule_TopLevel_TransmitterModule_State_FSM }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T78_ExprRhs = { {32{1'b0}}, TransmitterModule_TopLevel_TransmitterModule__L11F59T78_Expr }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprLhs = { {1{1'b0}}, TransmitterModule_TopLevel_TransmitterModule_NextState_FSM }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L11F82T126_ExprRhs = { {32{1'b0}}, TransmitterModule_TopLevel_TransmitterModule__L11F99T126_Expr }/*expand*/;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_1 = TransmitterModule_TopLevel_TransmitterModule__L11F46T78_Expr;
assign TransmitterModule_TopLevel_TransmitterModule__L11F46T126_Expr_2 = TransmitterModule_TopLevel_TransmitterModule__L11F82T126_Expr;
assign TransmitterModule_TopLevel_TransmitterModule_Inputs_Trigger = TransmitterModule_TopLevel_TransmitterModule_Trigger;
assign TransmitterModule_TopLevel_TransmitterModule_Inputs_Ack = TransmitterModule_TopLevel_TransmitterModule_Ack;
assign TransmitterModule_TopLevel_TransmitterModule_Inputs_Data = TransmitterModule_TopLevel_TransmitterModule_Data/*cast*/;
assign TransmitterModule_TopLevel_TransmitterModule__L8F28T41_Index = TransmitterModule_TopLevel_TransmitterModule_State_Data[1];
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
