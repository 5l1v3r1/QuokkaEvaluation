-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is CompositionModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity CompositionModule_TopLevel is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

Clock : in  std_logic;
Reset : in  std_logic;
CompositionModuleIsEnabled : in  std_logic;
CompositionModuleHasData : out  std_logic;
CompositionModuleData : out  unsigned(8 downto 1)
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of CompositionModule_TopLevel is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
signal CompositionModule_TopLevel_Clock : std_logic := '0';
signal CompositionModule_TopLevel_Reset : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModuleIsEnabled : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModuleHasData : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModuleData : unsigned(8 downto 1) := (others => '0');
signal CompositionModule_TopLevel_CompositionModule_Clock : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Reset : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_IsEnabled : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_HasData : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Data : unsigned(8 downto 1) := (others => '0');
constant CompositionModule_TopLevel_CompositionModule_Zero : std_logic := '0';
constant CompositionModule_TopLevel_CompositionModule_One : std_logic := '1';
constant CompositionModule_TopLevel_CompositionModule_true : std_logic := '1';
constant CompositionModule_TopLevel_CompositionModule_false : std_logic := '0';
constant CompositionModule_TopLevel_CompositionModule_CompositionModule_L41F27T31_Expr : std_logic := '1';
signal CompositionModule_TopLevel_CompositionModule_Inputs_IsEnabled : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Emitter_IsEnabled : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Emitter_Ack : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Emitter_Data : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_Emitter_HasData : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_Trigger : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_Ack : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_Data : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_Transmitter_Bit : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_IsReady : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmitting : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmissionStarted : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Receiver_IsValid : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Receiver_Ack : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Receiver_Bit : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Receiver_HasData : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_Receiver_Data : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_Receiver_PartialData : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_EmitterIsEnabledEmitter_IsEnabledHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_EmitterAckEmitter_AckHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_EmitterDataEmitter_DataHardLink : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_EmitterHasDataEmitter_HasDataHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterTriggerTransmitter_TriggerHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterAckTransmitter_AckHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterDataTransmitter_DataHardLink : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_TransmitterBitTransmitter_BitHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterIsReadyTransmitter_IsReadyHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmittingTransmitter_IsTransmittingHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmissionStartedTransmitter_IsTransmissionStartedHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_ReceiverIsValidReceiver_IsValidHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_ReceiverAckReceiver_AckHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_ReceiverBitReceiver_BitHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_ReceiverHasDataReceiver_HasDataHardLink : std_logic := '0';
signal CompositionModule_TopLevel_CompositionModule_ReceiverDataReceiver_DataHardLink : unsigned(8 downto 1)  := "00000000";
signal CompositionModule_TopLevel_CompositionModule_ReceiverPartialDataReceiver_PartialDataHardLink : unsigned(8 downto 1)  := "00000000";
signal BoardSignals : BoardSignalsType;
signal InternalReset : std_logic := '0';
begin
work.Quokka.BoardSignalsProc(BoardSignals,CompositionModule_TopLevel_CompositionModule_Clock,CompositionModule_TopLevel_CompositionModule_Reset,InternalReset);
CompositionModule_TopLevel_CompositionModule_Emitter : entity work.CompositionModule_TopLevel_CompositionModule_Emitter port map
(
--[BEGIN USER MAP FOR CompositionModule_TopLevel_CompositionModule_Emitter]
--[END USER MAP FOR CompositionModule_TopLevel_CompositionModule_Emitter]
BoardSignals => BoardSignals,
EmitterModuleIsEnabled => CompositionModule_TopLevel_CompositionModule_EmitterIsEnabledEmitter_IsEnabledHardLink,
EmitterModuleAck => CompositionModule_TopLevel_CompositionModule_EmitterAckEmitter_AckHardLink,
EmitterModuleData => CompositionModule_TopLevel_CompositionModule_EmitterDataEmitter_DataHardLink,
EmitterModuleHasData => CompositionModule_TopLevel_CompositionModule_EmitterHasDataEmitter_HasDataHardLink

);
CompositionModule_TopLevel_CompositionModule_Transmitter : entity work.CompositionModule_TopLevel_CompositionModule_Transmitter port map
(
--[BEGIN USER MAP FOR CompositionModule_TopLevel_CompositionModule_Transmitter]
--[END USER MAP FOR CompositionModule_TopLevel_CompositionModule_Transmitter]
BoardSignals => BoardSignals,
TransmitterModuleTrigger => CompositionModule_TopLevel_CompositionModule_TransmitterTriggerTransmitter_TriggerHardLink,
TransmitterModuleAck => CompositionModule_TopLevel_CompositionModule_TransmitterAckTransmitter_AckHardLink,
TransmitterModuleData => CompositionModule_TopLevel_CompositionModule_TransmitterDataTransmitter_DataHardLink,
TransmitterModuleBit => CompositionModule_TopLevel_CompositionModule_TransmitterBitTransmitter_BitHardLink,
TransmitterModuleIsReady => CompositionModule_TopLevel_CompositionModule_TransmitterIsReadyTransmitter_IsReadyHardLink,
TransmitterModuleIsTransmitting => CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmittingTransmitter_IsTransmittingHardLink,
TransmitterModuleIsTransmissionStarted => CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmissionStartedTransmitter_IsTransmissionStartedHardLink

);
CompositionModule_TopLevel_CompositionModule_Receiver : entity work.CompositionModule_TopLevel_CompositionModule_Receiver port map
(
--[BEGIN USER MAP FOR CompositionModule_TopLevel_CompositionModule_Receiver]
--[END USER MAP FOR CompositionModule_TopLevel_CompositionModule_Receiver]
BoardSignals => BoardSignals,
ReceiverModuleIsValid => CompositionModule_TopLevel_CompositionModule_ReceiverIsValidReceiver_IsValidHardLink,
ReceiverModuleAck => CompositionModule_TopLevel_CompositionModule_ReceiverAckReceiver_AckHardLink,
ReceiverModuleBit => CompositionModule_TopLevel_CompositionModule_ReceiverBitReceiver_BitHardLink,
ReceiverModuleHasData => CompositionModule_TopLevel_CompositionModule_ReceiverHasDataReceiver_HasDataHardLink,
ReceiverModuleData => CompositionModule_TopLevel_CompositionModule_ReceiverDataReceiver_DataHardLink,
ReceiverModulePartialData => CompositionModule_TopLevel_CompositionModule_ReceiverPartialDataReceiver_PartialDataHardLink

);
-- Top-level entity connections
process(Clock, CompositionModule_TopLevel_CompositionModuleData, CompositionModule_TopLevel_CompositionModuleHasData, CompositionModuleIsEnabled, Reset)
begin
	CompositionModule_TopLevel_CompositionModuleIsEnabled <= CompositionModuleIsEnabled;
CompositionModule_TopLevel_Clock <= Clock;
CompositionModule_TopLevel_Reset <= NOT Reset;
CompositionModuleHasData <= CompositionModule_TopLevel_CompositionModuleHasData;
CompositionModuleData <= CompositionModule_TopLevel_CompositionModuleData;
end process;
process(CompositionModule_TopLevel_Clock, CompositionModule_TopLevel_CompositionModule_Data, CompositionModule_TopLevel_CompositionModule_Emitter_Ack, CompositionModule_TopLevel_CompositionModule_Emitter_Data, CompositionModule_TopLevel_CompositionModule_Emitter_HasData, CompositionModule_TopLevel_CompositionModule_Emitter_IsEnabled, CompositionModule_TopLevel_CompositionModule_EmitterDataEmitter_DataHardLink, CompositionModule_TopLevel_CompositionModule_EmitterHasDataEmitter_HasDataHardLink, CompositionModule_TopLevel_CompositionModule_HasData, CompositionModule_TopLevel_CompositionModule_Inputs_IsEnabled, CompositionModule_TopLevel_CompositionModule_IsEnabled, CompositionModule_TopLevel_CompositionModule_Receiver_Ack, CompositionModule_TopLevel_CompositionModule_Receiver_Bit, CompositionModule_TopLevel_CompositionModule_Receiver_Data, CompositionModule_TopLevel_CompositionModule_Receiver_HasData, CompositionModule_TopLevel_CompositionModule_Receiver_IsValid, CompositionModule_TopLevel_CompositionModule_ReceiverDataReceiver_DataHardLink, CompositionModule_TopLevel_CompositionModule_ReceiverHasDataReceiver_HasDataHardLink, CompositionModule_TopLevel_CompositionModule_ReceiverPartialDataReceiver_PartialDataHardLink, CompositionModule_TopLevel_CompositionModule_Transmitter_Ack, CompositionModule_TopLevel_CompositionModule_Transmitter_Bit, CompositionModule_TopLevel_CompositionModule_Transmitter_Data, CompositionModule_TopLevel_CompositionModule_Transmitter_IsReady, CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmitting, CompositionModule_TopLevel_CompositionModule_Transmitter_Trigger, CompositionModule_TopLevel_CompositionModule_TransmitterBitTransmitter_BitHardLink, CompositionModule_TopLevel_CompositionModule_TransmitterIsReadyTransmitter_IsReadyHardLink, CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmissionStartedTransmitter_IsTransmissionStartedHardLink, CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmittingTransmitter_IsTransmittingHardLink, CompositionModule_TopLevel_CompositionModuleIsEnabled, CompositionModule_TopLevel_Reset)
begin
CompositionModule_TopLevel_CompositionModule_Clock <= CompositionModule_TopLevel_Clock;
CompositionModule_TopLevel_CompositionModule_Reset <= CompositionModule_TopLevel_Reset;
CompositionModule_TopLevel_CompositionModule_IsEnabled <= CompositionModule_TopLevel_CompositionModuleIsEnabled;
CompositionModule_TopLevel_CompositionModuleHasData <= CompositionModule_TopLevel_CompositionModule_HasData;
CompositionModule_TopLevel_CompositionModuleData <= CompositionModule_TopLevel_CompositionModule_Data;
CompositionModule_TopLevel_CompositionModule_Inputs_IsEnabled <= CompositionModule_TopLevel_CompositionModule_IsEnabled;
CompositionModule_TopLevel_CompositionModule_Emitter_IsEnabled <= CompositionModule_TopLevel_CompositionModule_Inputs_IsEnabled;
CompositionModule_TopLevel_CompositionModule_Emitter_Ack <= CompositionModule_TopLevel_CompositionModule_Transmitter_IsReady;
CompositionModule_TopLevel_CompositionModule_Transmitter_Trigger <= CompositionModule_TopLevel_CompositionModule_Emitter_HasData;
CompositionModule_TopLevel_CompositionModule_Transmitter_Data <= unsigned(CompositionModule_TopLevel_CompositionModule_Emitter_Data);
CompositionModule_TopLevel_CompositionModule_Transmitter_Ack <= CompositionModule_TopLevel_CompositionModule_Receiver_HasData;
CompositionModule_TopLevel_CompositionModule_Receiver_IsValid <= CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmitting;
CompositionModule_TopLevel_CompositionModule_Receiver_Bit <= CompositionModule_TopLevel_CompositionModule_Transmitter_Bit;
CompositionModule_TopLevel_CompositionModule_Receiver_Ack <= CompositionModule_TopLevel_CompositionModule_CompositionModule_L41F27T31_Expr;
CompositionModule_TopLevel_CompositionModule_HasData <= CompositionModule_TopLevel_CompositionModule_Receiver_HasData;
CompositionModule_TopLevel_CompositionModule_Data <= unsigned(CompositionModule_TopLevel_CompositionModule_Receiver_Data);
CompositionModule_TopLevel_CompositionModule_EmitterIsEnabledEmitter_IsEnabledHardLink <= CompositionModule_TopLevel_CompositionModule_Emitter_IsEnabled;
CompositionModule_TopLevel_CompositionModule_EmitterAckEmitter_AckHardLink <= CompositionModule_TopLevel_CompositionModule_Emitter_Ack;
CompositionModule_TopLevel_CompositionModule_Emitter_Data <= unsigned(CompositionModule_TopLevel_CompositionModule_EmitterDataEmitter_DataHardLink);
CompositionModule_TopLevel_CompositionModule_Emitter_HasData <= CompositionModule_TopLevel_CompositionModule_EmitterHasDataEmitter_HasDataHardLink;
CompositionModule_TopLevel_CompositionModule_TransmitterTriggerTransmitter_TriggerHardLink <= CompositionModule_TopLevel_CompositionModule_Transmitter_Trigger;
CompositionModule_TopLevel_CompositionModule_TransmitterAckTransmitter_AckHardLink <= CompositionModule_TopLevel_CompositionModule_Transmitter_Ack;
CompositionModule_TopLevel_CompositionModule_TransmitterDataTransmitter_DataHardLink <= unsigned(CompositionModule_TopLevel_CompositionModule_Transmitter_Data);
CompositionModule_TopLevel_CompositionModule_Transmitter_Bit <= CompositionModule_TopLevel_CompositionModule_TransmitterBitTransmitter_BitHardLink;
CompositionModule_TopLevel_CompositionModule_Transmitter_IsReady <= CompositionModule_TopLevel_CompositionModule_TransmitterIsReadyTransmitter_IsReadyHardLink;
CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmitting <= CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmittingTransmitter_IsTransmittingHardLink;
CompositionModule_TopLevel_CompositionModule_Transmitter_IsTransmissionStarted <= CompositionModule_TopLevel_CompositionModule_TransmitterIsTransmissionStartedTransmitter_IsTransmissionStartedHardLink;
CompositionModule_TopLevel_CompositionModule_ReceiverIsValidReceiver_IsValidHardLink <= CompositionModule_TopLevel_CompositionModule_Receiver_IsValid;
CompositionModule_TopLevel_CompositionModule_ReceiverAckReceiver_AckHardLink <= CompositionModule_TopLevel_CompositionModule_Receiver_Ack;
CompositionModule_TopLevel_CompositionModule_ReceiverBitReceiver_BitHardLink <= CompositionModule_TopLevel_CompositionModule_Receiver_Bit;
CompositionModule_TopLevel_CompositionModule_Receiver_HasData <= CompositionModule_TopLevel_CompositionModule_ReceiverHasDataReceiver_HasDataHardLink;
CompositionModule_TopLevel_CompositionModule_Receiver_Data <= unsigned(CompositionModule_TopLevel_CompositionModule_ReceiverDataReceiver_DataHardLink);
CompositionModule_TopLevel_CompositionModule_Receiver_PartialData <= unsigned(CompositionModule_TopLevel_CompositionModule_ReceiverPartialDataReceiver_PartialDataHardLink);
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
