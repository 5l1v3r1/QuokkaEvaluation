// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is CounterModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module CounterModule_TopLevel (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input  Clock,
	input  Reset,
	input  CounterModuleInReset,
	output [8: 1] CounterModuleValue
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  CounterModule_TopLevel_Clock;
wire  CounterModule_TopLevel_Reset;
wire  CounterModule_TopLevel_CounterModuleInReset;
wire  [8:1] CounterModule_TopLevel_CounterModuleValue;
wire  CounterModule_TopLevel_CounterModule_Clock;
wire  CounterModule_TopLevel_CounterModule_Reset;
wire  CounterModule_TopLevel_CounterModule_InReset;
wire  [8:1] CounterModule_TopLevel_CounterModule_Value;
wire  CounterModule_TopLevel_CounterModule_Zero = 1'b0;
wire  CounterModule_TopLevel_CounterModule_One = 1'b1;
wire  CounterModule_TopLevel_CounterModule_true = 1'b1;
wire  CounterModule_TopLevel_CounterModule_false = 1'b0;
wire  CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F48T61_Expr = 1'b0;
wire  CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F85T86_Expr = 1'b1;
wire  CounterModule_TopLevel_CounterModule_Inputs_InReset;
reg  [8:1] CounterModule_TopLevel_CounterModule_NextState_Value = 8'b00000000;
wire  [8:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F64T87_Expr;
wire  [8:1] CounterModule_TopLevel_CounterModule_State_Value;
wire  [8:1] CounterModule_TopLevel_CounterModule_State_ValueDefault = 8'b00000000;
wire  CounterModule_TopLevel_CounterModule_State_ValueWriteEnable;
wire  [10:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr;
wire signed  [10:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_1;
wire signed  [10:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_2;
reg  [8:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup = 8'b00000000;
wire  CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_LookupMultiplexerAddress;
wire  [8:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup1;
wire  [8:1] CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup2;
wire  BoardSignals_Clock;
wire  BoardSignals_Reset;
wire  BoardSignals_Running;
wire  BoardSignals_Starting;
wire  BoardSignals_Started;
reg  InternalReset = 1'b0;
reg  [8:1] CounterModule_TopLevel_CounterModule_State_ValueQ = 8'b00000000;
wire  [8:1] CounterModule_TopLevel_CounterModule_State_ValueD;
work_Quokka_BoardSignalsProc CounterModule_TopLevel_CounterModule_BoardSignalsConnection(BoardSignals_Clock,BoardSignals_Reset,BoardSignals_Running,BoardSignals_Starting,BoardSignals_Started,CounterModule_TopLevel_CounterModule_Clock,CounterModule_TopLevel_CounterModule_Reset,InternalReset);
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
CounterModule_TopLevel_CounterModule_State_ValueQ <= CounterModule_TopLevel_CounterModule_State_ValueDefault;
end
else if ( CounterModule_TopLevel_CounterModule_State_ValueWriteEnable == 1 ) begin
CounterModule_TopLevel_CounterModule_State_ValueQ <= CounterModule_TopLevel_CounterModule_State_ValueD;
end
else begin
CounterModule_TopLevel_CounterModule_State_ValueQ <= CounterModule_TopLevel_CounterModule_State_ValueQ;
end
end
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_1 + CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_2;
always @*
begin
case (CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_LookupMultiplexerAddress)
    'b0:
CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup1;
    'b1:
CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup2;
  default:
CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup = 'b00000000;
endcase

end
always @*
begin
CounterModule_TopLevel_CounterModule_NextState_Value = CounterModule_TopLevel_CounterModule_State_Value/*cast*/;
CounterModule_TopLevel_CounterModule_NextState_Value = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup/*cast*/;

end
	assign CounterModule_TopLevel_CounterModuleInReset = CounterModuleInReset;
// Top-level entity connections
assign CounterModule_TopLevel_Clock = Clock;
assign CounterModule_TopLevel_Reset = !Reset;
assign CounterModuleValue = CounterModule_TopLevel_CounterModuleValue;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_LookupMultiplexerAddress = CounterModule_TopLevel_CounterModule_Inputs_InReset;
assign CounterModule_TopLevel_CounterModule_State_Value = CounterModule_TopLevel_CounterModule_State_ValueQ;
assign CounterModule_TopLevel_CounterModule_State_ValueD = CounterModule_TopLevel_CounterModule_NextState_Value;
assign CounterModule_TopLevel_CounterModule_State_ValueWriteEnable = HiSignal;
assign CounterModule_TopLevel_CounterModule_Clock = CounterModule_TopLevel_Clock;
assign CounterModule_TopLevel_CounterModule_Reset = CounterModule_TopLevel_Reset;
assign CounterModule_TopLevel_CounterModule_InReset = CounterModule_TopLevel_CounterModuleInReset;
assign CounterModule_TopLevel_CounterModuleValue = CounterModule_TopLevel_CounterModule_Value;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_1 = { {2{1'b0}}, CounterModule_TopLevel_CounterModule_State_Value }/*expand*/;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr_2 = { {9{1'b0}}, CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F85T86_Expr }/*expand*/;
assign CounterModule_TopLevel_CounterModule_Inputs_InReset = CounterModule_TopLevel_CounterModule_InReset;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F64T87_Expr = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F71T86_Expr[8:1]/*truncate*/;
assign CounterModule_TopLevel_CounterModule_Value = CounterModule_TopLevel_CounterModule_State_Value/*cast*/;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup1 = CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F64T87_Expr/*cast*/;
assign CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F31T87_Lookup2 = { {7{1'b0}}, CounterModule_TopLevel_CounterModule_CounterModule_L19F9L22T10_CounterModule_L20F9L22T10_CounterModule_L21F48T61_Expr }/*expand*/;
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
