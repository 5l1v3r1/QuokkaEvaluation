// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is CompositionModule_TopLevel_CompositionModule_Receiver, clock frequency is 1Hz, Embedded
// FSM summary
// -- Packages
module CompositionModule_TopLevel_CompositionModule_Receiver (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input  BoardSignals_Clock,
	input  BoardSignals_Reset,
	input  BoardSignals_Running,
	input  BoardSignals_Starting,
	input  BoardSignals_Started,
	input  ReceiverModuleIsValid,
	input  ReceiverModuleAck,
	input  ReceiverModuleBit,
	output ReceiverModuleHasData,
	output [8: 1] ReceiverModuleData,
	output [8: 1] ReceiverModulePartialData
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleIsValid;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleAck;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleBit;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleHasData;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleData;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModulePartialData;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_IsValid;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Ack;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Bit;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_HasData;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Data;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_PartialData;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Zero = 1'b0;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_One = 1'b1;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_true = 1'b1;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_false = 1'b0;
wire  [2:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F46T71_Expr = 2'b10;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F56T60_Expr = 8'b10000000;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F63T64_Expr = 1'b0;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_IsValid;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_Ack;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_Bit;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F36T65_Expr;
wire signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSM;
wire signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMDefault = 32'b00000000000000000000000000000000;
reg  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMWriteEnable = 1'b0;
wire signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSM;
wire signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMDefault = 32'b00000000000000000000000000000000;
reg  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMWriteEnable = 1'b0;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_Data;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataDefault = 8'b00000000;
reg  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataWriteEnable = 1'b0;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_Data;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataDefault = 8'b00000000;
reg  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataWriteEnable = 1'b0;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_Expr;
wire signed  [33:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprLhs;
wire signed  [33:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprRhs;
reg  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup = 8'b00000000;
wire  CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_LookupMultiplexerAddress;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup1;
wire  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup2;
reg signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ = 32'b00000000000000000000000000000000;
reg signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMD = 32'b00000000000000000000000000000000;
reg signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ = 32'b00000000000000000000000000000000;
reg signed  [32:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMD = 32'b00000000000000000000000000000000;
reg  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ = 8'b00000000;
reg  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataD = 8'b00000000;
reg  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ = 8'b00000000;
reg  [8:1] CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataD = 8'b00000000;
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMDefault;
end
else if ( CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMWriteEnable == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMD;
end
else begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMDefault;
end
else if ( CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMWriteEnable == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMD;
end
else begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataDefault;
end
else if ( CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataWriteEnable == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataD;
end
else begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ;
end
end
always @(posedge BoardSignals_Clock)
begin
if ( BoardSignals_Reset == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataDefault;
end
else if ( CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataWriteEnable == 1 ) begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataD;
end
else begin
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ <= CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ;
end
end
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_Expr = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprLhs == CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprRhs ? 1'b1 : 1'b0;
always @*
begin
case (CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_LookupMultiplexerAddress)
    'b0:
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup1;
    'b1:
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup2;
  default:
CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup = 'b00000000;
endcase

end
	assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleIsValid = ReceiverModuleIsValid;
	assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleAck = ReceiverModuleAck;
	assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleBit = ReceiverModuleBit;
assign ReceiverModuleHasData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleHasData;
assign ReceiverModuleData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleData;
assign ReceiverModulePartialData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModulePartialData;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_LookupMultiplexerAddress = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_Bit;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSM = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSMQ;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSM = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_FSMQ;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_Data = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_DataQ;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_Data = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_NextState_DataQ;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_IsValid = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleIsValid;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Ack = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleAck;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Bit = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleBit;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleHasData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_HasData;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModuleData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Data;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModulePartialData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_PartialData;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprLhs = { {1{CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSM[32]}}, CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_FSM }/*expand*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_ExprRhs = { {31{1'b0}}, CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F46T71_Expr }/*expand*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_IsValid = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_IsValid;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_Ack = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Ack;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Inputs_Bit = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Bit;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_HasData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L8F32T71_Expr;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_Data = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_State_Data/*cast*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F36T65_Expr = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup/*cast*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_PartialData = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F36T65_Expr/*cast*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup1 = { {7{1'b0}}, CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F63T64_Expr }/*expand*/;
assign CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F43T64_Lookup2 = CompositionModule_TopLevel_CompositionModule_Receiver_ReceiverModule_ReceiverModule_L10F56T60_Expr/*cast*/;
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
