// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is AndGateModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AndGateModule_TopLevel (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input  AndGateModuleI1,
	input  AndGateModuleI2,
	output AndGateModuleO
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  AndGateModule_TopLevel_AndGateModuleI1;
wire  AndGateModule_TopLevel_AndGateModuleI2;
wire  AndGateModule_TopLevel_AndGateModuleO;
wire  AndGateModule_TopLevel_AndGateModule_I1;
wire  AndGateModule_TopLevel_AndGateModule_I2;
wire  AndGateModule_TopLevel_AndGateModule_O;
wire  AndGateModule_TopLevel_AndGateModule_Zero = 1'b0;
wire  AndGateModule_TopLevel_AndGateModule_One = 1'b1;
wire  AndGateModule_TopLevel_AndGateModule_true = 1'b1;
wire  AndGateModule_TopLevel_AndGateModule_false = 1'b0;
wire  AndGateModule_TopLevel_AndGateModule_Inputs_I1;
wire  AndGateModule_TopLevel_AndGateModule_Inputs_I2;
wire  AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr;
wire  AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_1;
wire  AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_2;
assign AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr = AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_1 & AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_2;
	assign AndGateModule_TopLevel_AndGateModuleI1 = AndGateModuleI1;
	assign AndGateModule_TopLevel_AndGateModuleI2 = AndGateModuleI2;
// Top-level entity connections
assign AndGateModuleO = AndGateModule_TopLevel_AndGateModuleO;
assign AndGateModule_TopLevel_AndGateModule_I1 = AndGateModule_TopLevel_AndGateModuleI1;
assign AndGateModule_TopLevel_AndGateModule_I2 = AndGateModule_TopLevel_AndGateModuleI2;
assign AndGateModule_TopLevel_AndGateModuleO = AndGateModule_TopLevel_AndGateModule_O;
assign AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_1 = AndGateModule_TopLevel_AndGateModule_Inputs_I1;
assign AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr_2 = AndGateModule_TopLevel_AndGateModule_Inputs_I2;
assign AndGateModule_TopLevel_AndGateModule_Inputs_I1 = AndGateModule_TopLevel_AndGateModule_I1;
assign AndGateModule_TopLevel_AndGateModule_Inputs_I2 = AndGateModule_TopLevel_AndGateModule_I2;
assign AndGateModule_TopLevel_AndGateModule_O = AndGateModule_TopLevel_AndGateModule_SimpleGates_L12F26T48_Expr;
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
