-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is RAMModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity RAMModule_TopLevel is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

Clock : in  std_logic;
Reset : in  std_logic;
RAMModuleReadAddress : in  unsigned(7 downto 0);
RAMModuleWriteEnable : in  std_logic;
RAMModuleWriteAddress : in  unsigned(7 downto 0);
RAMModuleWriteData : in  unsigned(7 downto 0);
RAMModuleReadData : out  unsigned(7 downto 0)
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of RAMModule_TopLevel is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
signal RAMModule_TopLevel_Clock : std_logic := '0';
signal RAMModule_TopLevel_Reset : std_logic := '0';
signal RAMModule_TopLevel_RAMModuleReadAddress : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModuleWriteEnable : std_logic := '0';
signal RAMModule_TopLevel_RAMModuleWriteAddress : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModuleWriteData : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModuleReadData : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModule_Clock : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_Reset : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_ReadAddress : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModule_WriteEnable : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_WriteAddress : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModule_WriteData : unsigned(8 downto 1) := (others => '0');
signal RAMModule_TopLevel_RAMModule_ReadData : unsigned(8 downto 1) := (others => '0');
constant RAMModule_TopLevel_RAMModule_Zero : std_logic := '0';
constant RAMModule_TopLevel_RAMModule_One : std_logic := '1';
constant RAMModule_TopLevel_RAMModule_true : std_logic := '1';
constant RAMModule_TopLevel_RAMModule_false : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_Inputs_ReadAddress : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_Inputs_WriteEnable : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_Inputs_WriteAddress : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_Inputs_WriteData : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_NextState_ReadData : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_NextState_IsKeepData : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_NextState_KeepData : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_IsReadOverWrite : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_IsKeepData : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_State_ReadData : unsigned(8 downto 1)  := "00000000";
constant RAMModule_TopLevel_RAMModule_State_ReadDataDefault : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_State_IsKeepData : std_logic := '0';
constant RAMModule_TopLevel_RAMModule_State_IsKeepDataDefault : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_State_KeepData : unsigned(8 downto 1)  := "00000000";
constant RAMModule_TopLevel_RAMModule_State_KeepDataDefault : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_1 : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_2 : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_Expr : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprLhs : signed(9 downto 1)  := "000000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprRhs : signed(9 downto 1)  := "000000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_LookupMultiplexerAddress : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup1 : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup2 : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_LookupMultiplexerAddress : std_logic := '0';
signal RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup1 : unsigned(8 downto 1)  := "00000000";
signal RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup2 : unsigned(8 downto 1)  := "00000000";
type RAMModule_TopLevel_RAMModule_State_BuffArray is array(0 to 255) of unsigned(8 downto 1);
constant RAMModule_TopLevel_RAMModule_State_BuffArrayInit: RAMModule_TopLevel_RAMModule_State_BuffArray:= (
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000",
"00000000"
);
signal RAMModule_TopLevel_RAMModule_State_Buff : RAMModule_TopLevel_RAMModule_State_BuffArray := RAMModule_TopLevel_RAMModule_State_BuffArrayInit;
signal BoardSignals : BoardSignalsType;
signal InternalReset : std_logic := '0';
begin
work.Quokka.BoardSignalsProc(BoardSignals,RAMModule_TopLevel_RAMModule_Clock,RAMModule_TopLevel_RAMModule_Reset,InternalReset);
process (BoardSignals, RAMModule_TopLevel_RAMModule_NextState_IsKeepData, RAMModule_TopLevel_RAMModule_NextState_KeepData, RAMModule_TopLevel_RAMModule_NextState_ReadData)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
RAMModule_TopLevel_RAMModule_State_ReadData <= RAMModule_TopLevel_RAMModule_State_ReadDataDefault;
RAMModule_TopLevel_RAMModule_State_IsKeepData <= RAMModule_TopLevel_RAMModule_State_IsKeepDataDefault;
RAMModule_TopLevel_RAMModule_State_KeepData <= RAMModule_TopLevel_RAMModule_State_KeepDataDefault;
else
RAMModule_TopLevel_RAMModule_State_ReadData <= RAMModule_TopLevel_RAMModule_NextState_ReadData;
RAMModule_TopLevel_RAMModule_State_IsKeepData <= RAMModule_TopLevel_RAMModule_NextState_IsKeepData;
RAMModule_TopLevel_RAMModule_State_KeepData <= RAMModule_TopLevel_RAMModule_NextState_KeepData;
end if;
end if;
end process;
    RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_Expr <= '1' when (signed(resize(RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprLhs, RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprLhs'length + 1)) = signed(resize(RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprRhs, RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprRhs'length + 1))) else '0';

process(RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_1, RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_2)
begin
RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr <= RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_1 AND RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_2;

    end process;
process(RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup1, RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup2, RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_LookupMultiplexerAddress)
begin
case RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_LookupMultiplexerAddress is
  when '0' => 
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup <= RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup1;
  when '1' => 
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup <= RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup2;
  when others => 
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup <= "00000000";
end case;

end process;
process(RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup1, RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup2, RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_LookupMultiplexerAddress)
begin
case RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_LookupMultiplexerAddress is
  when '0' => 
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup <= RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup1;
  when '1' => 
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup <= RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup2;
  when others => 
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup <= "00000000";
end case;

end process;
process (RAMModule_TopLevel_RAMModule_Clock, RAMModule_TopLevel_RAMModule_Inputs_WriteData, RAMModule_TopLevel_RAMModule_Inputs_WriteEnable)
begin
if rising_edge(RAMModule_TopLevel_RAMModule_Clock) then
if ( RAMModule_TopLevel_RAMModule_Inputs_WriteEnable = '1' ) then
RAMModule_TopLevel_RAMModule_State_Buff <= unsigned(RAMModule_TopLevel_RAMModule_Inputs_WriteData);
end if;
end if;
end process;
process(RAMModule_TopLevel_RAMModule_Inputs_WriteData, RAMModule_TopLevel_RAMModule_Inputs_WriteEnable, RAMModule_TopLevel_RAMModule_IsReadOverWrite, RAMModule_TopLevel_RAMModule_State_Buff, RAMModule_TopLevel_RAMModule_State_IsKeepData, RAMModule_TopLevel_RAMModule_State_KeepData, RAMModule_TopLevel_RAMModule_State_ReadData)
begin
RAMModule_TopLevel_RAMModule_NextState_ReadData <= unsigned(RAMModule_TopLevel_RAMModule_State_ReadData);
RAMModule_TopLevel_RAMModule_NextState_IsKeepData <= RAMModule_TopLevel_RAMModule_State_IsKeepData;
RAMModule_TopLevel_RAMModule_NextState_KeepData <= unsigned(RAMModule_TopLevel_RAMModule_State_KeepData);
RAMModule_TopLevel_RAMModule_NextState_IsKeepData <= RAMModule_TopLevel_RAMModule_IsReadOverWrite;
if ( RAMModule_TopLevel_RAMModule_IsReadOverWrite = '1' ) then
RAMModule_TopLevel_RAMModule_NextState_KeepData <= unsigned(RAMModule_TopLevel_RAMModule_Inputs_WriteData);
end if;
RAMModule_TopLevel_RAMModule_NextState_ReadData <= unsigned(RAMModule_TopLevel_RAMModule_State_Buff);
if ( RAMModule_TopLevel_RAMModule_Inputs_WriteEnable = '1' ) then
end if;
end process;
-- Top-level entity connections
process(Clock, RAMModule_TopLevel_RAMModuleReadData, RAMModuleReadAddress, RAMModuleWriteAddress, RAMModuleWriteData, RAMModuleWriteEnable, Reset)
begin
	RAMModule_TopLevel_RAMModuleReadAddress <= RAMModuleReadAddress;
	RAMModule_TopLevel_RAMModuleWriteEnable <= RAMModuleWriteEnable;
	RAMModule_TopLevel_RAMModuleWriteAddress <= RAMModuleWriteAddress;
	RAMModule_TopLevel_RAMModuleWriteData <= RAMModuleWriteData;
RAMModule_TopLevel_Clock <= Clock;
RAMModule_TopLevel_Reset <= NOT Reset;
RAMModuleReadData <= RAMModule_TopLevel_RAMModuleReadData;
end process;
process(RAMModule_TopLevel_Clock, RAMModule_TopLevel_RAMModule_Inputs_ReadAddress, RAMModule_TopLevel_RAMModule_Inputs_WriteAddress, RAMModule_TopLevel_RAMModule_Inputs_WriteData, RAMModule_TopLevel_RAMModule_Inputs_WriteEnable, RAMModule_TopLevel_RAMModule_IsKeepData, RAMModule_TopLevel_RAMModule_IsReadOverWrite, RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr, RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_Expr, RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup, RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup, RAMModule_TopLevel_RAMModule_ReadAddress, RAMModule_TopLevel_RAMModule_ReadData, RAMModule_TopLevel_RAMModule_State_IsKeepData, RAMModule_TopLevel_RAMModule_State_KeepData, RAMModule_TopLevel_RAMModule_State_ReadData, RAMModule_TopLevel_RAMModule_WriteAddress, RAMModule_TopLevel_RAMModule_WriteData, RAMModule_TopLevel_RAMModule_WriteEnable, RAMModule_TopLevel_RAMModuleReadAddress, RAMModule_TopLevel_RAMModuleWriteAddress, RAMModule_TopLevel_RAMModuleWriteData, RAMModule_TopLevel_RAMModuleWriteEnable, RAMModule_TopLevel_Reset)
begin
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_LookupMultiplexerAddress <= RAMModule_TopLevel_RAMModule_IsReadOverWrite;
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_LookupMultiplexerAddress <= RAMModule_TopLevel_RAMModule_IsKeepData;
RAMModule_TopLevel_RAMModule_Clock <= RAMModule_TopLevel_Clock;
RAMModule_TopLevel_RAMModule_Reset <= RAMModule_TopLevel_Reset;
RAMModule_TopLevel_RAMModule_ReadAddress <= RAMModule_TopLevel_RAMModuleReadAddress;
RAMModule_TopLevel_RAMModule_WriteEnable <= RAMModule_TopLevel_RAMModuleWriteEnable;
RAMModule_TopLevel_RAMModule_WriteAddress <= RAMModule_TopLevel_RAMModuleWriteAddress;
RAMModule_TopLevel_RAMModule_WriteData <= RAMModule_TopLevel_RAMModuleWriteData;
RAMModule_TopLevel_RAMModuleReadData <= RAMModule_TopLevel_RAMModule_ReadData;
RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprLhs <= signed(resize(RAMModule_TopLevel_RAMModule_Inputs_ReadAddress, RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprLhs'length));
RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprRhs <= signed(resize(RAMModule_TopLevel_RAMModule_Inputs_WriteAddress, RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_ExprRhs'length));
RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_1 <= RAMModule_TopLevel_RAMModule_Inputs_WriteEnable;
RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr_2 <= RAMModule_TopLevel_RAMModule_RAMModule_L25F55T96_Expr;
RAMModule_TopLevel_RAMModule_Inputs_ReadAddress <= unsigned(RAMModule_TopLevel_RAMModule_ReadAddress);
RAMModule_TopLevel_RAMModule_Inputs_WriteEnable <= RAMModule_TopLevel_RAMModule_WriteEnable;
RAMModule_TopLevel_RAMModule_Inputs_WriteAddress <= unsigned(RAMModule_TopLevel_RAMModule_WriteAddress);
RAMModule_TopLevel_RAMModule_Inputs_WriteData <= unsigned(RAMModule_TopLevel_RAMModule_WriteData);
RAMModule_TopLevel_RAMModule_IsReadOverWrite <= RAMModule_TopLevel_RAMModule_RAMModule_L25F33T96_Expr;
RAMModule_TopLevel_RAMModule_IsKeepData <= RAMModule_TopLevel_RAMModule_State_IsKeepData;
RAMModule_TopLevel_RAMModule_ReadData <= unsigned(RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup);
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup1 <= unsigned(RAMModule_TopLevel_RAMModule_State_ReadData);
RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup2 <= unsigned(RAMModule_TopLevel_RAMModule_Inputs_WriteData);
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup1 <= unsigned(RAMModule_TopLevel_RAMModule_RAMModule_L31F19L33T37_Lookup);
RAMModule_TopLevel_RAMModule_RAMModule_L29F13L33T37_Lookup2 <= unsigned(RAMModule_TopLevel_RAMModule_State_KeepData);
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
